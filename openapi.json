{
  "openapi": "3.0.2",
  "info": {
    "title": "Anti-Fraud Platform API",
    "description": "High-performance fraud detection and prevention API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8000",
      "description": "Development server"
    }
  ],
  "paths": {
    "/v2/events/": {
      "post": {
        "tags": ["events"],
        "summary": "Create Event",
        "description": "Create a new event and process it through the fraud detection pipeline",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/EventCreate"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Event created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventProcessingResult"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "get": {
        "tags": ["events"],
        "summary": "List Events",
        "description": "List events for a project with filtering",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 100
            }
          },
          {
            "name": "event_type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "decision",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Events retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventListResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/events/{event_id}": {
      "get": {
        "tags": ["events"],
        "summary": "Get Event",
        "description": "Get a specific event by ID",
        "parameters": [
          {
            "name": "event_id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Event retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventResponse"
                }
              }
            }
          },
          "404": {
            "description": "Event not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/v2/events/stats/summary": {
      "get": {
        "tags": ["events"],
        "summary": "Get Event Stats",
        "description": "Get event statistics summary",
        "parameters": [
          {
            "name": "project_id",
            "in": "query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "hours",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 24
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Statistics retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/EventStats"
                }
              }
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": ["health"],
        "summary": "Health Check",
        "description": "Check API health status",
        "responses": {
          "200": {
            "description": "API is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "EventCreate": {
        "type": "object",
        "required": ["event_type"],
        "properties": {
          "event_type": {
            "type": "string",
            "description": "Type of event (login, signup, checkout, payment, custom)",
            "enum": ["login", "signup", "checkout", "payment", "custom"]
          },
          "event_data": {
            "type": "object",
            "description": "Event-specific data",
            "default": {}
          },
          "profile_id": {
            "type": "string",
            "description": "External profile ID",
            "nullable": true
          },
          "session_id": {
            "type": "string",
            "description": "Session identifier",
            "nullable": true
          },
          "device_fingerprint": {
            "type": "string",
            "description": "Device fingerprint hash",
            "nullable": true
          },
          "ip_address": {
            "type": "string",
            "description": "IP address",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "description": "User agent string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "float",
            "description": "Transaction amount (for payment events)",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "description": "Currency code (for payment events)",
            "nullable": true
          }
        }
      },
      "EventResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string"
          },
          "event_type": {
            "type": "string"
          },
          "event_data": {
            "type": "object"
          },
          "profile_id": {
            "type": "string",
            "nullable": true
          },
          "session_id": {
            "type": "string",
            "nullable": true
          },
          "device_fingerprint": {
            "type": "string",
            "nullable": true
          },
          "ip_address": {
            "type": "string",
            "nullable": true
          },
          "user_agent": {
            "type": "string",
            "nullable": true
          },
          "amount": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "risk_score": {
            "type": "number",
            "format": "float",
            "nullable": true
          },
          "decision": {
            "type": "string",
            "nullable": true
          },
          "created_at": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "EventProcessingResult": {
        "type": "object",
        "properties": {
          "event_id": {
            "type": "string"
          },
          "risk_score": {
            "type": "number",
            "format": "float"
          },
          "decision": {
            "type": "string"
          },
          "reasons": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "rules_fired": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "processing_time_ms": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "EventListResponse": {
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventResponse"
            }
          },
          "total": {
            "type": "integer"
          },
          "page": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          }
        }
      },
      "EventStats": {
        "type": "object",
        "properties": {
          "total_events": {
            "type": "integer"
          },
          "allowed_events": {
            "type": "integer"
          },
          "denied_events": {
            "type": "integer"
          },
          "review_events": {
            "type": "integer"
          },
          "avg_risk_score": {
            "type": "number",
            "format": "float"
          },
          "max_risk_score": {
            "type": "number",
            "format": "float"
          },
          "min_risk_score": {
            "type": "number",
            "format": "float"
          },
          "time_period_hours": {
            "type": "integer"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "version": {
            "type": "string"
          },
          "database": {
            "type": "object",
            "nullable": true
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "string",
            "description": "Error message"
          },
          "detail": {
            "type": "string",
            "description": "Error details"
          },
          "timestamp": {
            "type": "string",
            "description": "Error timestamp"
          }
        }
      }
    }
  }
}
